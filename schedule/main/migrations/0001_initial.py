# Generated by Django 4.1.5 on 2023-06-09 10:02

from django.db import migrations, models
import django.db.models.deletion
import main.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_name", models.CharField(max_length=255, verbose_name="Фамилия")),
                ("first_name", models.CharField(max_length=255, verbose_name="Имя")),
                (
                    "fathers_name",
                    models.CharField(max_length=255, verbose_name="Отчество"),
                ),
                (
                    "birth_date",
                    models.DateField(null=True, verbose_name="Дата рождения"),
                ),
                (
                    "phone",
                    models.CharField(max_length=20, null=True, verbose_name="Телефон"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Doctor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_name", models.CharField(max_length=255)),
                ("first_name", models.CharField(max_length=255)),
                ("fathers_name", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                (
                    "photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="photos/%Y/%m/%d/"
                    ),
                ),
                ("education", models.TextField(max_length=2000)),
                ("description", models.TextField(blank=True, max_length=5000)),
                ("birth_date", models.DateField(blank=True, null=True)),
                ("working_start_time", models.TimeField(default="08:00")),
                ("working_finish_time", models.TimeField(default="17:00")),
                ("lunch_start_time", models.TimeField(default="12:00")),
                ("lunch_finish_time", models.TimeField(default="13:00")),
                ("working_days", models.IntegerField(default="1234567")),
                ("is_active", models.BooleanField(default=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Specialization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("visit_duration", models.IntegerField(default=30)),
                ("is_used", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Visit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visit_datetime", models.DateTimeField()),
                (
                    "client_visiting",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.client",
                    ),
                ),
                (
                    "doctor_to_visit",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.doctor",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="doctor",
            name="specialization",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="doctors_specialization",
                to="main.specialization",
            ),
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("first_name", models.CharField(max_length=20)),
                ("phone", models.CharField(max_length=20)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=True)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
            },
            managers=[
                ("objects", main.models.UserManager()),
            ],
        ),
    ]
